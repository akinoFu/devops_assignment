pipeline {
    agent any
    environment {
        AWS_ACCOUNT_ID="${env.AWS_ACCOUNT_ID_AKINO}"
        AWS_DEFAULT_REGION="us-west-1"
        CLUSTER_NAME="default"            // ECS Cluster
        SERVICE_NAME="simple-flask-service"            // the Service name in the ECS Cluster
        TASK_DEFINITION_NAME="first-run-task-definition"    // the Task name in the ECS Cluster
        DESIRED_COUNT="1"                   // the number of tasks in the ECS Cluster
        IMAGE_REPO_NAME="197085648105.dkr.ecr.us-west-1.amazonaws.com/devops_assignment"         // the ECR Repository URL
        IMAGE_TAG="${env.BUILD_ID}"
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
        registryCredential = "akino-aws"
    }
    stages {
        stage('Test') {
            steps { 
                sh "echo test..."
            }
        }
        stage('test2') {
            steps { 
                sh "pwd"
            }
        }
        // Building Docker images
        stage('Building image') {
            steps{
                sh 'echo Building...'
                script {
                    dockerImage = docker.build "${IMAGE_REPO_NAME}:${IMAGE_TAG}"
                }
            }
        }
        // Uploading Docker images into AWS ECR
        stage('Pushing to ECR') {
            steps{
                sh 'echo Pushing...'
                script {
                    docker.withRegistry("https://" + REPOSITORY_URI, "ecr:${AWS_DEFAULT_REGION}:" + registryCredential) {
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Deploy') {
            steps{
                sh 'echo Deploying...'
                withAWS(credentials: registryCredential, region: "${AWS_DEFAULT_REGION}") {
                    script {
                        sh 'chmod +x ./script.sh'
                        sh './script.sh'
                    }
                } 
            }
        }      
//         // stage('Package') { 
//         //     when { 
//         //         expression { env.GIT_BRANCH == 'main' } 
//         //     } 
//         //     steps { 
//         //         withCredentials([string(credentialsId: 'akino_dockerhub', variable: 'TOKEN')]) { 
//         //             sh "docker login -u 'akinofu' -p '$TOKEN' docker.io" 
//         //             sh "docker build --tag akinofu/${dockerRepoName}:latest ${directoryName}" 
//         //             sh "docker push akinofu/${dockerRepoName}:latest" 
//         //         } 
//         //     } 
//         // }
    }
}